import type { NextPage, GetServerSideProps } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { client } from '../lib/client'
import LandingDeck from '../components/LandingDeck'
import Pagination from '../components/Pagenation'
import { AiOutlineLoading3Quarters } from 'react-icons/ai'
import { useEffect, useState } from 'react'
import getArticles from '../lib/getArticles'

const Home: NextPage = (props: any) => {
  const { queryString } = props

  const [ dataLoaded, setDataLoaded ] = useState(false)
  const [ data, setData ] = useState<any>(null)

  const { page } = queryString

  useEffect(() => {
    getArticles(page, client).then((res: any) => {
      setData(res)
      setDataLoaded(true)
    })
  }, [page])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to MJH articles!
        </h1>
        <div className='container h-screen'>
          { !dataLoaded && <div className='w-full flex items-center justify-center mt-24'>
            <AiOutlineLoading3Quarters size={40}/>
          </div>}
          { dataLoaded && data && data.articles && data.articles.map((article:any, index:number) => <LandingDeck key={index} data={article} client={client} index={index} switchSide={index%2 === 1}/>) }
          { dataLoaded && data && <Pagination totalCount={data.totalCount} pageNumber={data.pageNumber} pageSize={data.pageSize} queryString={queryString}/> }
        </div>
      </main>
    </div>
  )
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  
  const { query } = context

  return {
    props: {
      queryString: query
    }
  }
}

export default Home
